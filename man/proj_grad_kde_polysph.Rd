% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{proj_grad_kde_polysph}
\alias{proj_grad_kde_polysph}
\title{Projected gradient of the polyspherical kde}
\usage{
proj_grad_kde_polysph(x, X, d, h, weights = as.numeric(c()),
  wrt_unif = FALSE, normalized = TRUE, norm_x = FALSE, norm_X = FALSE,
  kernel = 1L, kernel_type = 1L, k = 10, proj_alt = TRUE,
  fix_u1 = TRUE, sparse = FALSE)
}
\arguments{
\item{x}{a matrix of size \code{c(nx, sum(d) + r)} with the evaluation
points.}

\item{X}{a matrix of size \code{c(n, sum(d) + r)} with the sample.}

\item{d}{dimensions vector, of size \code{r}.}

\item{h}{bandwidth vector, of size \code{r}.}

\item{weights}{weights for each observation. If provided, a vector of size
\code{n} with the weights for multiplying each kernel. If not provided,
set internally to \code{rep(1 / n, n)}, which gives the standard estimator.}

\item{wrt_unif}{flag to return a density with respect to the uniform
measure. If \code{FALSE} (default), the density is with respect to the
Lebesgue measure.}

\item{normalized}{flag to compute the normalizing constant of the kernel
and include it in the kernel density estimator. Defaults to \code{TRUE}.}

\item{norm_x, norm_X}{ensure a normalization of the data? Defaults to
\code{FALSE}.}

\item{kernel}{kernel employed: \code{1} for vMF (default); \code{2}
for Epa, \eqn{L(t) = (1 - t)1_{\{0 \le t \le 1\}}}; \code{3} for softplus.}

\item{kernel_type}{type of kernel employed: \code{1} for product kernel
(default); \code{2} for spherically symmetric kernel.}

\item{k}{softplus kernel parameter. Defaults to \code{10.0}.}

\item{proj_alt}{alternative projection. Defaults to \code{TRUE}.}

\item{fix_u1}{ensure the \eqn{u_1} vector is different from \eqn{x}?
Prevents the Euler algorithm to "surf the ridge". Defaults to \code{TRUE}.}

\item{sparse}{use a sparse eigendecomposition of the Hessian? Defaults to
\code{FALSE}.}
}
\value{
TODO
}
\description{
TODO
}
\examples{
# TODO
}
