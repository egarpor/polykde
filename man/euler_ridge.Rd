% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{euler_ridge}
\alias{euler_ridge}
\title{Euler step for density ridge estimation}
\usage{
euler_ridge(x, X, d, h, h_euler = as.numeric(c()),
  weights = as.numeric(c()), wrt_unif = FALSE, normalized = TRUE,
  norm_x = FALSE, norm_X = FALSE, kernel = 1L, kernel_type = 1L,
  k = 10, N = 1000L, eps = 1e-05, keep_paths = FALSE,
  proj_alt = TRUE, fix_u1 = TRUE, sparse = FALSE, show_prog = TRUE,
  show_prog_j = FALSE)
}
\arguments{
\item{x}{a matrix of size \code{c(nx, sum(d) + r)} with the evaluation
points.}

\item{X}{a matrix of size \code{c(n, sum(d) + r)} with the sample.}

\item{d}{dimensions vector, of size \code{r}.}

\item{h}{bandwidth vector, of size \code{r}.}

\item{h_euler}{vector of size \code{r} with the advance steps in the Euler
method. Set internally as \code{h} if not provided.}

\item{weights}{weights for each observation. If provided, a vector of size
\code{n} with the weights for multiplying each kernel. If not provided,
set internally to \code{rep(1 / n, n)}, which gives the standard estimator.}

\item{wrt_unif}{flag to return a density with respect to the uniform
measure. If \code{FALSE} (default), the density is with respect to the
Lebesgue measure.}

\item{normalized}{flag to compute the normalizing constant of the kernel
and include it in the kernel density estimator. Defaults to \code{TRUE}.}

\item{norm_x, norm_X}{ensure a normalization of the data? Defaults to
\code{FALSE}.}

\item{kernel}{kernel employed: \code{1} for von Mises--Fisher (default);
\code{2} for Epanechnikov, \eqn{L(t) = (1 - t)1_{\{0 \le t \le 1\}}};
\code{3} for softplus.}

\item{kernel_type}{type of kernel employed: \code{1} for product kernel
(default); \code{2} for spherically symmetric kernel.}

\item{k}{softplus kernel parameter. Defaults to \code{10.0}.}

\item{N}{maximum number of Euler iterations. Defaults to \code{1e3}.}

\item{eps}{convergence tolerance. Defaults to \code{1e-5}.}

\item{keep_paths}{keep the Euler paths to the ridge? Defaults to
\code{FALSE}.}

\item{proj_alt}{alternative projection. Defaults to \code{TRUE}.}

\item{fix_u1}{ensure the \eqn{u_1} vector is different from \eqn{x}?
Prevents the Euler algorithm to "surf the ridge". Defaults to \code{TRUE}.}

\item{sparse}{use a sparse eigendecomposition of the Hessian? Defaults to
\code{FALSE}.}

\item{show_prog}{display a progress bar for \code{x}? Defaults to
\code{TRUE}.}

\item{show_prog_j}{display a progress bar for \code{N}? Defaults to
\code{FALSE}.}
}
\value{
TODO
}
\description{
TODO
}
\examples{
# TODO
}
